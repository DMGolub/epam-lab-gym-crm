plugins {
    id 'war'
    id 'jacoco'
}

group = 'com.epam.dmgolub.gym'
version = '0.0.1-SNAPSHOT'

dependencies {
    // https://mvnrepository.com/artifact/org.springframework/spring-web
    implementation "org.springframework:spring-web:$springVersion"
    // https://mvnrepository.com/artifact/org.springframework/spring-webmvc
    implementation "org.springframework:spring-webmvc:$springVersion"
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation "org.springframework:spring-jdbc:$springVersion"
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons
    implementation "org.springframework.data:spring-data-commons:$springDataCommonsVersion"
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa
    implementation "org.springframework.data:spring-data-jpa:$springDataJpaVersion"

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"

    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
    implementation "org.thymeleaf:thymeleaf-spring5:$thymeleafVersion"

    // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
    implementation "javax.annotation:javax.annotation-api:$javaxAnnotationApi"

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    implementation "javax.servlet:javax.servlet-api:$javaxServletApi"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation "org.apache.commons:commons-lang3:$apacheCommonsLangVersion"

    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation "javax.validation:validation-api:$javaxValidationVersion"

    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation "org.hibernate.validator:hibernate-validator:$hibernateValidatorVersion"

    implementation 'org.glassfish:javax.el:3.0.1-b08'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation "org.postgresql:postgresql:$postgresqlVersion"

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    implementation "org.hibernate:hibernate-core:$hibernateCoreVersion"
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
    implementation "org.hibernate:hibernate-entitymanager:$hibernateEntityNanagerVersion"

    implementation 'io.hypersistence:hypersistence-utils-hibernate-52:3.3.2'
    implementation 'com.vladmihalcea:hibernate-types-52:2.12.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
    implementation 'org.javassist:javassist:3.29.0-GA'

    implementation "io.springfox:springfox-swagger2:$springfoxVersion"
    implementation "io.springfox:springfox-data-rest:$springfoxVersion"
    implementation "io.springfox:springfox-swagger-ui:$springfoxVersion"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*Test*', '**/mapper/*', '**/*Config*', '**/*ServletInitializer*', '**/*Exception*'])
        })
    }
}

build.dependsOn jacocoTestReport
